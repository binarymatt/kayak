// @generated by protoc-gen-es v2.3.0 with parameter "target=ts"
// @generated from file kayak/v1/raft.proto (package kayak.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Record, Stream, Worker } from "./model_pb";
import { file_kayak_v1_model } from "./model_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file kayak/v1/raft.proto.
 */
export const file_kayak_v1_raft: GenFile = /*@__PURE__*/
  fileDesc("ChNrYXlhay92MS9yYWZ0LnByb3RvEghrYXlhay52MSLnAgoLUmFmdENvbW1hbmQSJgoJb3BlcmF0aW9uGAEgASgOMhMua2F5YWsudjEuT3BlcmF0aW9uEikKCnB1dF9zdHJlYW0YAiABKAsyEy5rYXlhay52MS5QdXRTdHJlYW1IABIrCgtwdXRfcmVjb3JkcxgDIAEoCzIULmtheWFrLnYxLlB1dFJlY29yZHNIABItCgxleHRlbmRfbGVhc2UYBCABKAsyFS5rYXlhay52MS5FeHRlbmRMZWFzZUgAEi0KDHJlbW92ZV9sZWFzZRgFIAEoCzIVLmtheWFrLnYxLlJlbW92ZUxlYXNlSAASPgoVY29tbWl0X2dyb3VwX3Bvc2l0aW9uGAYgASgLMh0ua2F5YWsudjEuQ29tbWl0R3JvdXBQb3NpdGlvbkgAEi8KDWRlbGV0ZV9zdHJlYW0YByABKAsyFi5rYXlhay52MS5EZWxldGVTdHJlYW1IAEIJCgdwYXlsb2FkIiMKDERlbGV0ZVN0cmVhbRITCgtzdHJlYW1fbmFtZRgBIAEoCSItCglQdXRTdHJlYW0SIAoGc3RyZWFtGAEgASgLMhAua2F5YWsudjEuU3RyZWFtIkQKClB1dFJlY29yZHMSEwoLc3RyZWFtX25hbWUYASABKAkSIQoHcmVjb3JkcxgCIAMoCzIQLmtheWFrLnYxLlJlY29yZCJDCgtFeHRlbmRMZWFzZRIgCgZ3b3JrZXIYASABKAsyEC5rYXlhay52MS5Xb3JrZXISEgoKZXhwaXJlc19tcxgCIAEoAyIvCgtSZW1vdmVMZWFzZRIgCgZ3b3JrZXIYASABKAsyEC5rYXlhay52MS5Xb3JrZXIiYwoTQ29tbWl0R3JvdXBQb3NpdGlvbhITCgtzdHJlYW1fbmFtZRgBIAEoCRISCgpncm91cF9uYW1lGAIgASgJEhEKCXBhcnRpdGlvbhgDIAEoAxIQCghwb3NpdGlvbhgEIAEoCSq4AQoJT3BlcmF0aW9uEhkKFU9QRVJBVElPTl9VTlNQRUNJRklFRBAAEhgKFE9QRVJBVElPTl9QVVRfU1RSRUFNEAESGQoVT1BFUkFUSU9OX1BVVF9SRUNPUkRTEAISGgoWT1BFUkFUSU9OX0VYVEVORF9MRUFTRRADEhoKFk9QRVJBVElPTl9SRU1PVkVfTEVBU0UQBBIjCh9PUEVSQVRJT05fQ09NTUlUX0dST1VQX1BPU0lUSU9OEAVCjAEKDGNvbS5rYXlhay52MUIJUmFmdFByb3RvUAFaMGdpdGh1Yi5jb20vYmluYXJ5bWF0dC9rYXlhay9nZW4va2F5YWsvdjE7a2F5YWt2MaICA0tYWKoCCEtheWFrLlYxygIIS2F5YWtcVjHiAhRLYXlha1xWMVxHUEJNZXRhZGF0YeoCCUtheWFrOjpWMWIGcHJvdG8z", [file_kayak_v1_model]);

/**
 * @generated from message kayak.v1.RaftCommand
 */
export type RaftCommand = Message<"kayak.v1.RaftCommand"> & {
  /**
   * @generated from field: kayak.v1.Operation operation = 1;
   */
  operation: Operation;

  /**
   * @generated from oneof kayak.v1.RaftCommand.payload
   */
  payload: {
    /**
     * @generated from field: kayak.v1.PutStream put_stream = 2;
     */
    value: PutStream;
    case: "putStream";
  } | {
    /**
     * @generated from field: kayak.v1.PutRecords put_records = 3;
     */
    value: PutRecords;
    case: "putRecords";
  } | {
    /**
     * @generated from field: kayak.v1.ExtendLease extend_lease = 4;
     */
    value: ExtendLease;
    case: "extendLease";
  } | {
    /**
     * @generated from field: kayak.v1.RemoveLease remove_lease = 5;
     */
    value: RemoveLease;
    case: "removeLease";
  } | {
    /**
     * @generated from field: kayak.v1.CommitGroupPosition commit_group_position = 6;
     */
    value: CommitGroupPosition;
    case: "commitGroupPosition";
  } | {
    /**
     * @generated from field: kayak.v1.DeleteStream delete_stream = 7;
     */
    value: DeleteStream;
    case: "deleteStream";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message kayak.v1.RaftCommand.
 * Use `create(RaftCommandSchema)` to create a new message.
 */
export const RaftCommandSchema: GenMessage<RaftCommand> = /*@__PURE__*/
  messageDesc(file_kayak_v1_raft, 0);

/**
 * @generated from message kayak.v1.DeleteStream
 */
export type DeleteStream = Message<"kayak.v1.DeleteStream"> & {
  /**
   * @generated from field: string stream_name = 1;
   */
  streamName: string;
};

/**
 * Describes the message kayak.v1.DeleteStream.
 * Use `create(DeleteStreamSchema)` to create a new message.
 */
export const DeleteStreamSchema: GenMessage<DeleteStream> = /*@__PURE__*/
  messageDesc(file_kayak_v1_raft, 1);

/**
 * @generated from message kayak.v1.PutStream
 */
export type PutStream = Message<"kayak.v1.PutStream"> & {
  /**
   * @generated from field: kayak.v1.Stream stream = 1;
   */
  stream?: Stream;
};

/**
 * Describes the message kayak.v1.PutStream.
 * Use `create(PutStreamSchema)` to create a new message.
 */
export const PutStreamSchema: GenMessage<PutStream> = /*@__PURE__*/
  messageDesc(file_kayak_v1_raft, 2);

/**
 * @generated from message kayak.v1.PutRecords
 */
export type PutRecords = Message<"kayak.v1.PutRecords"> & {
  /**
   * @generated from field: string stream_name = 1;
   */
  streamName: string;

  /**
   * @generated from field: repeated kayak.v1.Record records = 2;
   */
  records: Record[];
};

/**
 * Describes the message kayak.v1.PutRecords.
 * Use `create(PutRecordsSchema)` to create a new message.
 */
export const PutRecordsSchema: GenMessage<PutRecords> = /*@__PURE__*/
  messageDesc(file_kayak_v1_raft, 3);

/**
 * @generated from message kayak.v1.ExtendLease
 */
export type ExtendLease = Message<"kayak.v1.ExtendLease"> & {
  /**
   * @generated from field: kayak.v1.Worker worker = 1;
   */
  worker?: Worker;

  /**
   * @generated from field: int64 expires_ms = 2;
   */
  expiresMs: bigint;
};

/**
 * Describes the message kayak.v1.ExtendLease.
 * Use `create(ExtendLeaseSchema)` to create a new message.
 */
export const ExtendLeaseSchema: GenMessage<ExtendLease> = /*@__PURE__*/
  messageDesc(file_kayak_v1_raft, 4);

/**
 * @generated from message kayak.v1.RemoveLease
 */
export type RemoveLease = Message<"kayak.v1.RemoveLease"> & {
  /**
   * @generated from field: kayak.v1.Worker worker = 1;
   */
  worker?: Worker;
};

/**
 * Describes the message kayak.v1.RemoveLease.
 * Use `create(RemoveLeaseSchema)` to create a new message.
 */
export const RemoveLeaseSchema: GenMessage<RemoveLease> = /*@__PURE__*/
  messageDesc(file_kayak_v1_raft, 5);

/**
 * @generated from message kayak.v1.CommitGroupPosition
 */
export type CommitGroupPosition = Message<"kayak.v1.CommitGroupPosition"> & {
  /**
   * @generated from field: string stream_name = 1;
   */
  streamName: string;

  /**
   * @generated from field: string group_name = 2;
   */
  groupName: string;

  /**
   * @generated from field: int64 partition = 3;
   */
  partition: bigint;

  /**
   * @generated from field: string position = 4;
   */
  position: string;
};

/**
 * Describes the message kayak.v1.CommitGroupPosition.
 * Use `create(CommitGroupPositionSchema)` to create a new message.
 */
export const CommitGroupPositionSchema: GenMessage<CommitGroupPosition> = /*@__PURE__*/
  messageDesc(file_kayak_v1_raft, 6);

/**
 * @generated from enum kayak.v1.Operation
 */
export enum Operation {
  /**
   * @generated from enum value: OPERATION_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: OPERATION_PUT_STREAM = 1;
   */
  PUT_STREAM = 1,

  /**
   * @generated from enum value: OPERATION_PUT_RECORDS = 2;
   */
  PUT_RECORDS = 2,

  /**
   * @generated from enum value: OPERATION_EXTEND_LEASE = 3;
   */
  EXTEND_LEASE = 3,

  /**
   * @generated from enum value: OPERATION_REMOVE_LEASE = 4;
   */
  REMOVE_LEASE = 4,

  /**
   * @generated from enum value: OPERATION_COMMIT_GROUP_POSITION = 5;
   */
  COMMIT_GROUP_POSITION = 5,
}

/**
 * Describes the enum kayak.v1.Operation.
 */
export const OperationSchema: GenEnum<Operation> = /*@__PURE__*/
  enumDesc(file_kayak_v1_raft, 0);


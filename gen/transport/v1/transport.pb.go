// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: transport/v1/transport.proto

package transportv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Log_LogType int32

const (
	Log_LOG_COMMAND                Log_LogType = 0
	Log_LOG_NOOP                   Log_LogType = 1
	Log_LOG_ADD_PEER_DEPRECATED    Log_LogType = 2
	Log_LOG_REMOVE_PEER_DEPRECATED Log_LogType = 3
	Log_LOG_BARRIER                Log_LogType = 4
	Log_LOG_CONFIGURATION          Log_LogType = 5
)

// Enum value maps for Log_LogType.
var (
	Log_LogType_name = map[int32]string{
		0: "LOG_COMMAND",
		1: "LOG_NOOP",
		2: "LOG_ADD_PEER_DEPRECATED",
		3: "LOG_REMOVE_PEER_DEPRECATED",
		4: "LOG_BARRIER",
		5: "LOG_CONFIGURATION",
	}
	Log_LogType_value = map[string]int32{
		"LOG_COMMAND":                0,
		"LOG_NOOP":                   1,
		"LOG_ADD_PEER_DEPRECATED":    2,
		"LOG_REMOVE_PEER_DEPRECATED": 3,
		"LOG_BARRIER":                4,
		"LOG_CONFIGURATION":          5,
	}
)

func (x Log_LogType) Enum() *Log_LogType {
	p := new(Log_LogType)
	*p = x
	return p
}

func (x Log_LogType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Log_LogType) Descriptor() protoreflect.EnumDescriptor {
	return file_transport_v1_transport_proto_enumTypes[0].Descriptor()
}

func (Log_LogType) Type() protoreflect.EnumType {
	return &file_transport_v1_transport_proto_enumTypes[0]
}

func (x Log_LogType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Log_LogType.Descriptor instead.
func (Log_LogType) EnumDescriptor() ([]byte, []int) {
	return file_transport_v1_transport_proto_rawDescGZIP(), []int{1, 0}
}

type RPCHeader struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ProtocolVersion int64                  `protobuf:"varint,1,opt,name=protocol_version,json=protocolVersion,proto3" json:"protocol_version,omitempty"`
	Id              []byte                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Addr            []byte                 `protobuf:"bytes,3,opt,name=addr,proto3" json:"addr,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *RPCHeader) Reset() {
	*x = RPCHeader{}
	mi := &file_transport_v1_transport_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RPCHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RPCHeader) ProtoMessage() {}

func (x *RPCHeader) ProtoReflect() protoreflect.Message {
	mi := &file_transport_v1_transport_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RPCHeader.ProtoReflect.Descriptor instead.
func (*RPCHeader) Descriptor() ([]byte, []int) {
	return file_transport_v1_transport_proto_rawDescGZIP(), []int{0}
}

func (x *RPCHeader) GetProtocolVersion() int64 {
	if x != nil {
		return x.ProtocolVersion
	}
	return 0
}

func (x *RPCHeader) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *RPCHeader) GetAddr() []byte {
	if x != nil {
		return x.Addr
	}
	return nil
}

type Log struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Index         uint64                 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Term          uint64                 `protobuf:"varint,2,opt,name=term,proto3" json:"term,omitempty"`
	Type          Log_LogType            `protobuf:"varint,3,opt,name=type,proto3,enum=transport.v1.Log_LogType" json:"type,omitempty"`
	Data          []byte                 `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	Extensions    []byte                 `protobuf:"bytes,5,opt,name=extensions,proto3" json:"extensions,omitempty"`
	AppendedAt    *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=appended_at,json=appendedAt,proto3" json:"appended_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Log) Reset() {
	*x = Log{}
	mi := &file_transport_v1_transport_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Log) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Log) ProtoMessage() {}

func (x *Log) ProtoReflect() protoreflect.Message {
	mi := &file_transport_v1_transport_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Log.ProtoReflect.Descriptor instead.
func (*Log) Descriptor() ([]byte, []int) {
	return file_transport_v1_transport_proto_rawDescGZIP(), []int{1}
}

func (x *Log) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Log) GetTerm() uint64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *Log) GetType() Log_LogType {
	if x != nil {
		return x.Type
	}
	return Log_LOG_COMMAND
}

func (x *Log) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Log) GetExtensions() []byte {
	if x != nil {
		return x.Extensions
	}
	return nil
}

func (x *Log) GetAppendedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.AppendedAt
	}
	return nil
}

type AppendEntriesRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	RpcHeader         *RPCHeader             `protobuf:"bytes,1,opt,name=rpc_header,json=rpcHeader,proto3" json:"rpc_header,omitempty"`
	Term              uint64                 `protobuf:"varint,2,opt,name=term,proto3" json:"term,omitempty"`
	Leader            []byte                 `protobuf:"bytes,3,opt,name=leader,proto3" json:"leader,omitempty"`
	PrevLogEntry      uint64                 `protobuf:"varint,4,opt,name=prev_log_entry,json=prevLogEntry,proto3" json:"prev_log_entry,omitempty"`
	PrevLogTerm       uint64                 `protobuf:"varint,5,opt,name=prev_log_term,json=prevLogTerm,proto3" json:"prev_log_term,omitempty"`
	Entries           []*Log                 `protobuf:"bytes,6,rep,name=entries,proto3" json:"entries,omitempty"`
	LeaderCommitIndex uint64                 `protobuf:"varint,7,opt,name=leader_commit_index,json=leaderCommitIndex,proto3" json:"leader_commit_index,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *AppendEntriesRequest) Reset() {
	*x = AppendEntriesRequest{}
	mi := &file_transport_v1_transport_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppendEntriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendEntriesRequest) ProtoMessage() {}

func (x *AppendEntriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transport_v1_transport_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendEntriesRequest.ProtoReflect.Descriptor instead.
func (*AppendEntriesRequest) Descriptor() ([]byte, []int) {
	return file_transport_v1_transport_proto_rawDescGZIP(), []int{2}
}

func (x *AppendEntriesRequest) GetRpcHeader() *RPCHeader {
	if x != nil {
		return x.RpcHeader
	}
	return nil
}

func (x *AppendEntriesRequest) GetTerm() uint64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *AppendEntriesRequest) GetLeader() []byte {
	if x != nil {
		return x.Leader
	}
	return nil
}

func (x *AppendEntriesRequest) GetPrevLogEntry() uint64 {
	if x != nil {
		return x.PrevLogEntry
	}
	return 0
}

func (x *AppendEntriesRequest) GetPrevLogTerm() uint64 {
	if x != nil {
		return x.PrevLogTerm
	}
	return 0
}

func (x *AppendEntriesRequest) GetEntries() []*Log {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *AppendEntriesRequest) GetLeaderCommitIndex() uint64 {
	if x != nil {
		return x.LeaderCommitIndex
	}
	return 0
}

type AppendEntriesResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	RpcHeader      *RPCHeader             `protobuf:"bytes,1,opt,name=rpc_header,json=rpcHeader,proto3" json:"rpc_header,omitempty"`
	Term           uint64                 `protobuf:"varint,2,opt,name=term,proto3" json:"term,omitempty"`
	LastLog        uint64                 `protobuf:"varint,3,opt,name=last_log,json=lastLog,proto3" json:"last_log,omitempty"`
	Success        bool                   `protobuf:"varint,4,opt,name=success,proto3" json:"success,omitempty"`
	NoRetryBackoff bool                   `protobuf:"varint,5,opt,name=no_retry_backoff,json=noRetryBackoff,proto3" json:"no_retry_backoff,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AppendEntriesResponse) Reset() {
	*x = AppendEntriesResponse{}
	mi := &file_transport_v1_transport_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppendEntriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendEntriesResponse) ProtoMessage() {}

func (x *AppendEntriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_transport_v1_transport_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendEntriesResponse.ProtoReflect.Descriptor instead.
func (*AppendEntriesResponse) Descriptor() ([]byte, []int) {
	return file_transport_v1_transport_proto_rawDescGZIP(), []int{3}
}

func (x *AppendEntriesResponse) GetRpcHeader() *RPCHeader {
	if x != nil {
		return x.RpcHeader
	}
	return nil
}

func (x *AppendEntriesResponse) GetTerm() uint64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *AppendEntriesResponse) GetLastLog() uint64 {
	if x != nil {
		return x.LastLog
	}
	return 0
}

func (x *AppendEntriesResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AppendEntriesResponse) GetNoRetryBackoff() bool {
	if x != nil {
		return x.NoRetryBackoff
	}
	return false
}

type RequestVoteRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	RpcHeader          *RPCHeader             `protobuf:"bytes,1,opt,name=rpc_header,json=rpcHeader,proto3" json:"rpc_header,omitempty"`
	Term               uint64                 `protobuf:"varint,2,opt,name=term,proto3" json:"term,omitempty"`
	Candidate          []byte                 `protobuf:"bytes,3,opt,name=candidate,proto3" json:"candidate,omitempty"`
	LastLogIndex       uint64                 `protobuf:"varint,4,opt,name=last_log_index,json=lastLogIndex,proto3" json:"last_log_index,omitempty"`
	LastLogTerm        uint64                 `protobuf:"varint,5,opt,name=last_log_term,json=lastLogTerm,proto3" json:"last_log_term,omitempty"`
	LeadershipTransfer bool                   `protobuf:"varint,6,opt,name=leadership_transfer,json=leadershipTransfer,proto3" json:"leadership_transfer,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *RequestVoteRequest) Reset() {
	*x = RequestVoteRequest{}
	mi := &file_transport_v1_transport_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestVoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestVoteRequest) ProtoMessage() {}

func (x *RequestVoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transport_v1_transport_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestVoteRequest.ProtoReflect.Descriptor instead.
func (*RequestVoteRequest) Descriptor() ([]byte, []int) {
	return file_transport_v1_transport_proto_rawDescGZIP(), []int{4}
}

func (x *RequestVoteRequest) GetRpcHeader() *RPCHeader {
	if x != nil {
		return x.RpcHeader
	}
	return nil
}

func (x *RequestVoteRequest) GetTerm() uint64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *RequestVoteRequest) GetCandidate() []byte {
	if x != nil {
		return x.Candidate
	}
	return nil
}

func (x *RequestVoteRequest) GetLastLogIndex() uint64 {
	if x != nil {
		return x.LastLogIndex
	}
	return 0
}

func (x *RequestVoteRequest) GetLastLogTerm() uint64 {
	if x != nil {
		return x.LastLogTerm
	}
	return 0
}

func (x *RequestVoteRequest) GetLeadershipTransfer() bool {
	if x != nil {
		return x.LeadershipTransfer
	}
	return false
}

type RequestVoteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RpcHeader     *RPCHeader             `protobuf:"bytes,1,opt,name=rpc_header,json=rpcHeader,proto3" json:"rpc_header,omitempty"`
	Term          uint64                 `protobuf:"varint,2,opt,name=term,proto3" json:"term,omitempty"`
	Peers         []byte                 `protobuf:"bytes,3,opt,name=peers,proto3" json:"peers,omitempty"`
	Granted       bool                   `protobuf:"varint,4,opt,name=granted,proto3" json:"granted,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestVoteResponse) Reset() {
	*x = RequestVoteResponse{}
	mi := &file_transport_v1_transport_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestVoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestVoteResponse) ProtoMessage() {}

func (x *RequestVoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_transport_v1_transport_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestVoteResponse.ProtoReflect.Descriptor instead.
func (*RequestVoteResponse) Descriptor() ([]byte, []int) {
	return file_transport_v1_transport_proto_rawDescGZIP(), []int{5}
}

func (x *RequestVoteResponse) GetRpcHeader() *RPCHeader {
	if x != nil {
		return x.RpcHeader
	}
	return nil
}

func (x *RequestVoteResponse) GetTerm() uint64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *RequestVoteResponse) GetPeers() []byte {
	if x != nil {
		return x.Peers
	}
	return nil
}

func (x *RequestVoteResponse) GetGranted() bool {
	if x != nil {
		return x.Granted
	}
	return false
}

type TimeoutNowRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RpcHeader     *RPCHeader             `protobuf:"bytes,1,opt,name=rpc_header,json=rpcHeader,proto3" json:"rpc_header,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TimeoutNowRequest) Reset() {
	*x = TimeoutNowRequest{}
	mi := &file_transport_v1_transport_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimeoutNowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeoutNowRequest) ProtoMessage() {}

func (x *TimeoutNowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transport_v1_transport_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeoutNowRequest.ProtoReflect.Descriptor instead.
func (*TimeoutNowRequest) Descriptor() ([]byte, []int) {
	return file_transport_v1_transport_proto_rawDescGZIP(), []int{6}
}

func (x *TimeoutNowRequest) GetRpcHeader() *RPCHeader {
	if x != nil {
		return x.RpcHeader
	}
	return nil
}

type TimeoutNowResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RpcHeader     *RPCHeader             `protobuf:"bytes,1,opt,name=rpc_header,json=rpcHeader,proto3" json:"rpc_header,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TimeoutNowResponse) Reset() {
	*x = TimeoutNowResponse{}
	mi := &file_transport_v1_transport_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimeoutNowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeoutNowResponse) ProtoMessage() {}

func (x *TimeoutNowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_transport_v1_transport_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeoutNowResponse.ProtoReflect.Descriptor instead.
func (*TimeoutNowResponse) Descriptor() ([]byte, []int) {
	return file_transport_v1_transport_proto_rawDescGZIP(), []int{7}
}

func (x *TimeoutNowResponse) GetRpcHeader() *RPCHeader {
	if x != nil {
		return x.RpcHeader
	}
	return nil
}

// The first InstallSnapshotRequest on the stream contains all the metadata.
// All further messages contain only data.
type InstallSnapshotRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	RpcHeader          *RPCHeader             `protobuf:"bytes,1,opt,name=rpc_header,json=rpcHeader,proto3" json:"rpc_header,omitempty"`
	SnapshotVersion    int64                  `protobuf:"varint,11,opt,name=snapshot_version,json=snapshotVersion,proto3" json:"snapshot_version,omitempty"`
	Term               uint64                 `protobuf:"varint,2,opt,name=term,proto3" json:"term,omitempty"`
	Leader             []byte                 `protobuf:"bytes,3,opt,name=leader,proto3" json:"leader,omitempty"`
	LastLogIndex       uint64                 `protobuf:"varint,4,opt,name=last_log_index,json=lastLogIndex,proto3" json:"last_log_index,omitempty"`
	LastLogTerm        uint64                 `protobuf:"varint,5,opt,name=last_log_term,json=lastLogTerm,proto3" json:"last_log_term,omitempty"`
	Peers              []byte                 `protobuf:"bytes,6,opt,name=peers,proto3" json:"peers,omitempty"`
	Configuration      []byte                 `protobuf:"bytes,7,opt,name=configuration,proto3" json:"configuration,omitempty"`
	ConfigurationIndex uint64                 `protobuf:"varint,8,opt,name=configuration_index,json=configurationIndex,proto3" json:"configuration_index,omitempty"`
	Size               int64                  `protobuf:"varint,9,opt,name=size,proto3" json:"size,omitempty"`
	Data               []byte                 `protobuf:"bytes,10,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *InstallSnapshotRequest) Reset() {
	*x = InstallSnapshotRequest{}
	mi := &file_transport_v1_transport_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstallSnapshotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallSnapshotRequest) ProtoMessage() {}

func (x *InstallSnapshotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transport_v1_transport_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallSnapshotRequest.ProtoReflect.Descriptor instead.
func (*InstallSnapshotRequest) Descriptor() ([]byte, []int) {
	return file_transport_v1_transport_proto_rawDescGZIP(), []int{8}
}

func (x *InstallSnapshotRequest) GetRpcHeader() *RPCHeader {
	if x != nil {
		return x.RpcHeader
	}
	return nil
}

func (x *InstallSnapshotRequest) GetSnapshotVersion() int64 {
	if x != nil {
		return x.SnapshotVersion
	}
	return 0
}

func (x *InstallSnapshotRequest) GetTerm() uint64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *InstallSnapshotRequest) GetLeader() []byte {
	if x != nil {
		return x.Leader
	}
	return nil
}

func (x *InstallSnapshotRequest) GetLastLogIndex() uint64 {
	if x != nil {
		return x.LastLogIndex
	}
	return 0
}

func (x *InstallSnapshotRequest) GetLastLogTerm() uint64 {
	if x != nil {
		return x.LastLogTerm
	}
	return 0
}

func (x *InstallSnapshotRequest) GetPeers() []byte {
	if x != nil {
		return x.Peers
	}
	return nil
}

func (x *InstallSnapshotRequest) GetConfiguration() []byte {
	if x != nil {
		return x.Configuration
	}
	return nil
}

func (x *InstallSnapshotRequest) GetConfigurationIndex() uint64 {
	if x != nil {
		return x.ConfigurationIndex
	}
	return 0
}

func (x *InstallSnapshotRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *InstallSnapshotRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type InstallSnapshotResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RpcHeader     *RPCHeader             `protobuf:"bytes,1,opt,name=rpc_header,json=rpcHeader,proto3" json:"rpc_header,omitempty"`
	Term          uint64                 `protobuf:"varint,2,opt,name=term,proto3" json:"term,omitempty"`
	Success       bool                   `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InstallSnapshotResponse) Reset() {
	*x = InstallSnapshotResponse{}
	mi := &file_transport_v1_transport_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstallSnapshotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallSnapshotResponse) ProtoMessage() {}

func (x *InstallSnapshotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_transport_v1_transport_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallSnapshotResponse.ProtoReflect.Descriptor instead.
func (*InstallSnapshotResponse) Descriptor() ([]byte, []int) {
	return file_transport_v1_transport_proto_rawDescGZIP(), []int{9}
}

func (x *InstallSnapshotResponse) GetRpcHeader() *RPCHeader {
	if x != nil {
		return x.RpcHeader
	}
	return nil
}

func (x *InstallSnapshotResponse) GetTerm() uint64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *InstallSnapshotResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type RequestPreVoteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RpcHeader     *RPCHeader             `protobuf:"bytes,1,opt,name=rpc_header,json=rpcHeader,proto3" json:"rpc_header,omitempty"`
	Term          uint64                 `protobuf:"varint,2,opt,name=term,proto3" json:"term,omitempty"`
	LastLogIndex  uint64                 `protobuf:"varint,3,opt,name=last_log_index,json=lastLogIndex,proto3" json:"last_log_index,omitempty"`
	LastLogTerm   uint64                 `protobuf:"varint,4,opt,name=last_log_term,json=lastLogTerm,proto3" json:"last_log_term,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestPreVoteRequest) Reset() {
	*x = RequestPreVoteRequest{}
	mi := &file_transport_v1_transport_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestPreVoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestPreVoteRequest) ProtoMessage() {}

func (x *RequestPreVoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transport_v1_transport_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestPreVoteRequest.ProtoReflect.Descriptor instead.
func (*RequestPreVoteRequest) Descriptor() ([]byte, []int) {
	return file_transport_v1_transport_proto_rawDescGZIP(), []int{10}
}

func (x *RequestPreVoteRequest) GetRpcHeader() *RPCHeader {
	if x != nil {
		return x.RpcHeader
	}
	return nil
}

func (x *RequestPreVoteRequest) GetTerm() uint64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *RequestPreVoteRequest) GetLastLogIndex() uint64 {
	if x != nil {
		return x.LastLogIndex
	}
	return 0
}

func (x *RequestPreVoteRequest) GetLastLogTerm() uint64 {
	if x != nil {
		return x.LastLogTerm
	}
	return 0
}

type RequestPreVoteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RpcHeader     *RPCHeader             `protobuf:"bytes,1,opt,name=rpc_header,json=rpcHeader,proto3" json:"rpc_header,omitempty"`
	Term          uint64                 `protobuf:"varint,2,opt,name=term,proto3" json:"term,omitempty"`
	Granted       bool                   `protobuf:"varint,3,opt,name=granted,proto3" json:"granted,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestPreVoteResponse) Reset() {
	*x = RequestPreVoteResponse{}
	mi := &file_transport_v1_transport_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestPreVoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestPreVoteResponse) ProtoMessage() {}

func (x *RequestPreVoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_transport_v1_transport_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestPreVoteResponse.ProtoReflect.Descriptor instead.
func (*RequestPreVoteResponse) Descriptor() ([]byte, []int) {
	return file_transport_v1_transport_proto_rawDescGZIP(), []int{11}
}

func (x *RequestPreVoteResponse) GetRpcHeader() *RPCHeader {
	if x != nil {
		return x.RpcHeader
	}
	return nil
}

func (x *RequestPreVoteResponse) GetTerm() uint64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *RequestPreVoteResponse) GetGranted() bool {
	if x != nil {
		return x.Granted
	}
	return false
}

var File_transport_v1_transport_proto protoreflect.FileDescriptor

const file_transport_v1_transport_proto_rawDesc = "" +
	"\n" +
	"\x1ctransport/v1/transport.proto\x12\ftransport.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"Z\n" +
	"\tRPCHeader\x12)\n" +
	"\x10protocol_version\x18\x01 \x01(\x03R\x0fprotocolVersion\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\fR\x02id\x12\x12\n" +
	"\x04addr\x18\x03 \x01(\fR\x04addr\"\xdf\x02\n" +
	"\x03Log\x12\x14\n" +
	"\x05index\x18\x01 \x01(\x04R\x05index\x12\x12\n" +
	"\x04term\x18\x02 \x01(\x04R\x04term\x12-\n" +
	"\x04type\x18\x03 \x01(\x0e2\x19.transport.v1.Log.LogTypeR\x04type\x12\x12\n" +
	"\x04data\x18\x04 \x01(\fR\x04data\x12\x1e\n" +
	"\n" +
	"extensions\x18\x05 \x01(\fR\n" +
	"extensions\x12;\n" +
	"\vappended_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"appendedAt\"\x8d\x01\n" +
	"\aLogType\x12\x0f\n" +
	"\vLOG_COMMAND\x10\x00\x12\f\n" +
	"\bLOG_NOOP\x10\x01\x12\x1b\n" +
	"\x17LOG_ADD_PEER_DEPRECATED\x10\x02\x12\x1e\n" +
	"\x1aLOG_REMOVE_PEER_DEPRECATED\x10\x03\x12\x0f\n" +
	"\vLOG_BARRIER\x10\x04\x12\x15\n" +
	"\x11LOG_CONFIGURATION\x10\x05\"\xa1\x02\n" +
	"\x14AppendEntriesRequest\x126\n" +
	"\n" +
	"rpc_header\x18\x01 \x01(\v2\x17.transport.v1.RPCHeaderR\trpcHeader\x12\x12\n" +
	"\x04term\x18\x02 \x01(\x04R\x04term\x12\x16\n" +
	"\x06leader\x18\x03 \x01(\fR\x06leader\x12$\n" +
	"\x0eprev_log_entry\x18\x04 \x01(\x04R\fprevLogEntry\x12\"\n" +
	"\rprev_log_term\x18\x05 \x01(\x04R\vprevLogTerm\x12+\n" +
	"\aentries\x18\x06 \x03(\v2\x11.transport.v1.LogR\aentries\x12.\n" +
	"\x13leader_commit_index\x18\a \x01(\x04R\x11leaderCommitIndex\"\xc2\x01\n" +
	"\x15AppendEntriesResponse\x126\n" +
	"\n" +
	"rpc_header\x18\x01 \x01(\v2\x17.transport.v1.RPCHeaderR\trpcHeader\x12\x12\n" +
	"\x04term\x18\x02 \x01(\x04R\x04term\x12\x19\n" +
	"\blast_log\x18\x03 \x01(\x04R\alastLog\x12\x18\n" +
	"\asuccess\x18\x04 \x01(\bR\asuccess\x12(\n" +
	"\x10no_retry_backoff\x18\x05 \x01(\bR\x0enoRetryBackoff\"\xf9\x01\n" +
	"\x12RequestVoteRequest\x126\n" +
	"\n" +
	"rpc_header\x18\x01 \x01(\v2\x17.transport.v1.RPCHeaderR\trpcHeader\x12\x12\n" +
	"\x04term\x18\x02 \x01(\x04R\x04term\x12\x1c\n" +
	"\tcandidate\x18\x03 \x01(\fR\tcandidate\x12$\n" +
	"\x0elast_log_index\x18\x04 \x01(\x04R\flastLogIndex\x12\"\n" +
	"\rlast_log_term\x18\x05 \x01(\x04R\vlastLogTerm\x12/\n" +
	"\x13leadership_transfer\x18\x06 \x01(\bR\x12leadershipTransfer\"\x91\x01\n" +
	"\x13RequestVoteResponse\x126\n" +
	"\n" +
	"rpc_header\x18\x01 \x01(\v2\x17.transport.v1.RPCHeaderR\trpcHeader\x12\x12\n" +
	"\x04term\x18\x02 \x01(\x04R\x04term\x12\x14\n" +
	"\x05peers\x18\x03 \x01(\fR\x05peers\x12\x18\n" +
	"\agranted\x18\x04 \x01(\bR\agranted\"K\n" +
	"\x11TimeoutNowRequest\x126\n" +
	"\n" +
	"rpc_header\x18\x01 \x01(\v2\x17.transport.v1.RPCHeaderR\trpcHeader\"L\n" +
	"\x12TimeoutNowResponse\x126\n" +
	"\n" +
	"rpc_header\x18\x01 \x01(\v2\x17.transport.v1.RPCHeaderR\trpcHeader\"\x86\x03\n" +
	"\x16InstallSnapshotRequest\x126\n" +
	"\n" +
	"rpc_header\x18\x01 \x01(\v2\x17.transport.v1.RPCHeaderR\trpcHeader\x12)\n" +
	"\x10snapshot_version\x18\v \x01(\x03R\x0fsnapshotVersion\x12\x12\n" +
	"\x04term\x18\x02 \x01(\x04R\x04term\x12\x16\n" +
	"\x06leader\x18\x03 \x01(\fR\x06leader\x12$\n" +
	"\x0elast_log_index\x18\x04 \x01(\x04R\flastLogIndex\x12\"\n" +
	"\rlast_log_term\x18\x05 \x01(\x04R\vlastLogTerm\x12\x14\n" +
	"\x05peers\x18\x06 \x01(\fR\x05peers\x12$\n" +
	"\rconfiguration\x18\a \x01(\fR\rconfiguration\x12/\n" +
	"\x13configuration_index\x18\b \x01(\x04R\x12configurationIndex\x12\x12\n" +
	"\x04size\x18\t \x01(\x03R\x04size\x12\x12\n" +
	"\x04data\x18\n" +
	" \x01(\fR\x04data\"\x7f\n" +
	"\x17InstallSnapshotResponse\x126\n" +
	"\n" +
	"rpc_header\x18\x01 \x01(\v2\x17.transport.v1.RPCHeaderR\trpcHeader\x12\x12\n" +
	"\x04term\x18\x02 \x01(\x04R\x04term\x12\x18\n" +
	"\asuccess\x18\x03 \x01(\bR\asuccess\"\xad\x01\n" +
	"\x15RequestPreVoteRequest\x126\n" +
	"\n" +
	"rpc_header\x18\x01 \x01(\v2\x17.transport.v1.RPCHeaderR\trpcHeader\x12\x12\n" +
	"\x04term\x18\x02 \x01(\x04R\x04term\x12$\n" +
	"\x0elast_log_index\x18\x03 \x01(\x04R\flastLogIndex\x12\"\n" +
	"\rlast_log_term\x18\x04 \x01(\x04R\vlastLogTerm\"~\n" +
	"\x16RequestPreVoteResponse\x126\n" +
	"\n" +
	"rpc_header\x18\x01 \x01(\v2\x17.transport.v1.RPCHeaderR\trpcHeader\x12\x12\n" +
	"\x04term\x18\x02 \x01(\x04R\x04term\x12\x18\n" +
	"\agranted\x18\x03 \x01(\bR\agranted2\xbf\x04\n" +
	"\rRaftTransport\x12f\n" +
	"\x15AppendEntriesPipeline\x12\".transport.v1.AppendEntriesRequest\x1a#.transport.v1.AppendEntriesResponse\"\x00(\x010\x01\x12Z\n" +
	"\rAppendEntries\x12\".transport.v1.AppendEntriesRequest\x1a#.transport.v1.AppendEntriesResponse\"\x00\x12T\n" +
	"\vRequestVote\x12 .transport.v1.RequestVoteRequest\x1a!.transport.v1.RequestVoteResponse\"\x00\x12Q\n" +
	"\n" +
	"TimeoutNow\x12\x1f.transport.v1.TimeoutNowRequest\x1a .transport.v1.TimeoutNowResponse\"\x00\x12b\n" +
	"\x0fInstallSnapshot\x12$.transport.v1.InstallSnapshotRequest\x1a%.transport.v1.InstallSnapshotResponse\"\x00(\x01\x12]\n" +
	"\x0eRequestPreVote\x12#.transport.v1.RequestPreVoteRequest\x1a$.transport.v1.RequestPreVoteResponse\"\x00B\xad\x01\n" +
	"\x10com.transport.v1B\x0eTransportProtoP\x01Z8github.com/binarymatt/kayak/gen/transport/v1;transportv1\xa2\x02\x03TXX\xaa\x02\fTransport.V1\xca\x02\fTransport\\V1\xe2\x02\x18Transport\\V1\\GPBMetadata\xea\x02\rTransport::V1b\x06proto3"

var (
	file_transport_v1_transport_proto_rawDescOnce sync.Once
	file_transport_v1_transport_proto_rawDescData []byte
)

func file_transport_v1_transport_proto_rawDescGZIP() []byte {
	file_transport_v1_transport_proto_rawDescOnce.Do(func() {
		file_transport_v1_transport_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_transport_v1_transport_proto_rawDesc), len(file_transport_v1_transport_proto_rawDesc)))
	})
	return file_transport_v1_transport_proto_rawDescData
}

var file_transport_v1_transport_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_transport_v1_transport_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_transport_v1_transport_proto_goTypes = []any{
	(Log_LogType)(0),                // 0: transport.v1.Log.LogType
	(*RPCHeader)(nil),               // 1: transport.v1.RPCHeader
	(*Log)(nil),                     // 2: transport.v1.Log
	(*AppendEntriesRequest)(nil),    // 3: transport.v1.AppendEntriesRequest
	(*AppendEntriesResponse)(nil),   // 4: transport.v1.AppendEntriesResponse
	(*RequestVoteRequest)(nil),      // 5: transport.v1.RequestVoteRequest
	(*RequestVoteResponse)(nil),     // 6: transport.v1.RequestVoteResponse
	(*TimeoutNowRequest)(nil),       // 7: transport.v1.TimeoutNowRequest
	(*TimeoutNowResponse)(nil),      // 8: transport.v1.TimeoutNowResponse
	(*InstallSnapshotRequest)(nil),  // 9: transport.v1.InstallSnapshotRequest
	(*InstallSnapshotResponse)(nil), // 10: transport.v1.InstallSnapshotResponse
	(*RequestPreVoteRequest)(nil),   // 11: transport.v1.RequestPreVoteRequest
	(*RequestPreVoteResponse)(nil),  // 12: transport.v1.RequestPreVoteResponse
	(*timestamppb.Timestamp)(nil),   // 13: google.protobuf.Timestamp
}
var file_transport_v1_transport_proto_depIdxs = []int32{
	0,  // 0: transport.v1.Log.type:type_name -> transport.v1.Log.LogType
	13, // 1: transport.v1.Log.appended_at:type_name -> google.protobuf.Timestamp
	1,  // 2: transport.v1.AppendEntriesRequest.rpc_header:type_name -> transport.v1.RPCHeader
	2,  // 3: transport.v1.AppendEntriesRequest.entries:type_name -> transport.v1.Log
	1,  // 4: transport.v1.AppendEntriesResponse.rpc_header:type_name -> transport.v1.RPCHeader
	1,  // 5: transport.v1.RequestVoteRequest.rpc_header:type_name -> transport.v1.RPCHeader
	1,  // 6: transport.v1.RequestVoteResponse.rpc_header:type_name -> transport.v1.RPCHeader
	1,  // 7: transport.v1.TimeoutNowRequest.rpc_header:type_name -> transport.v1.RPCHeader
	1,  // 8: transport.v1.TimeoutNowResponse.rpc_header:type_name -> transport.v1.RPCHeader
	1,  // 9: transport.v1.InstallSnapshotRequest.rpc_header:type_name -> transport.v1.RPCHeader
	1,  // 10: transport.v1.InstallSnapshotResponse.rpc_header:type_name -> transport.v1.RPCHeader
	1,  // 11: transport.v1.RequestPreVoteRequest.rpc_header:type_name -> transport.v1.RPCHeader
	1,  // 12: transport.v1.RequestPreVoteResponse.rpc_header:type_name -> transport.v1.RPCHeader
	3,  // 13: transport.v1.RaftTransport.AppendEntriesPipeline:input_type -> transport.v1.AppendEntriesRequest
	3,  // 14: transport.v1.RaftTransport.AppendEntries:input_type -> transport.v1.AppendEntriesRequest
	5,  // 15: transport.v1.RaftTransport.RequestVote:input_type -> transport.v1.RequestVoteRequest
	7,  // 16: transport.v1.RaftTransport.TimeoutNow:input_type -> transport.v1.TimeoutNowRequest
	9,  // 17: transport.v1.RaftTransport.InstallSnapshot:input_type -> transport.v1.InstallSnapshotRequest
	11, // 18: transport.v1.RaftTransport.RequestPreVote:input_type -> transport.v1.RequestPreVoteRequest
	4,  // 19: transport.v1.RaftTransport.AppendEntriesPipeline:output_type -> transport.v1.AppendEntriesResponse
	4,  // 20: transport.v1.RaftTransport.AppendEntries:output_type -> transport.v1.AppendEntriesResponse
	6,  // 21: transport.v1.RaftTransport.RequestVote:output_type -> transport.v1.RequestVoteResponse
	8,  // 22: transport.v1.RaftTransport.TimeoutNow:output_type -> transport.v1.TimeoutNowResponse
	10, // 23: transport.v1.RaftTransport.InstallSnapshot:output_type -> transport.v1.InstallSnapshotResponse
	12, // 24: transport.v1.RaftTransport.RequestPreVote:output_type -> transport.v1.RequestPreVoteResponse
	19, // [19:25] is the sub-list for method output_type
	13, // [13:19] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_transport_v1_transport_proto_init() }
func file_transport_v1_transport_proto_init() {
	if File_transport_v1_transport_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_transport_v1_transport_proto_rawDesc), len(file_transport_v1_transport_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_transport_v1_transport_proto_goTypes,
		DependencyIndexes: file_transport_v1_transport_proto_depIdxs,
		EnumInfos:         file_transport_v1_transport_proto_enumTypes,
		MessageInfos:      file_transport_v1_transport_proto_msgTypes,
	}.Build()
	File_transport_v1_transport_proto = out.File
	file_transport_v1_transport_proto_goTypes = nil
	file_transport_v1_transport_proto_depIdxs = nil
}

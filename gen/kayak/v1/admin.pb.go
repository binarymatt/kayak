// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: kayak/v1/admin.proto

package kayakv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AddVoterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Address       string                 `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddVoterRequest) Reset() {
	*x = AddVoterRequest{}
	mi := &file_kayak_v1_admin_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddVoterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddVoterRequest) ProtoMessage() {}

func (x *AddVoterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kayak_v1_admin_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddVoterRequest.ProtoReflect.Descriptor instead.
func (*AddVoterRequest) Descriptor() ([]byte, []int) {
	return file_kayak_v1_admin_proto_rawDescGZIP(), []int{0}
}

func (x *AddVoterRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AddVoterRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type AddVoterResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddVoterResponse) Reset() {
	*x = AddVoterResponse{}
	mi := &file_kayak_v1_admin_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddVoterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddVoterResponse) ProtoMessage() {}

func (x *AddVoterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kayak_v1_admin_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddVoterResponse.ProtoReflect.Descriptor instead.
func (*AddVoterResponse) Descriptor() ([]byte, []int) {
	return file_kayak_v1_admin_proto_rawDescGZIP(), []int{1}
}

type StatsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatsRequest) Reset() {
	*x = StatsRequest{}
	mi := &file_kayak_v1_admin_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatsRequest) ProtoMessage() {}

func (x *StatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kayak_v1_admin_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatsRequest.ProtoReflect.Descriptor instead.
func (*StatsRequest) Descriptor() ([]byte, []int) {
	return file_kayak_v1_admin_proto_rawDescGZIP(), []int{2}
}

type ConfigItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Suffrage      string                 `protobuf:"bytes,1,opt,name=suffrage,proto3" json:"suffrage,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Address       string                 `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigItem) Reset() {
	*x = ConfigItem{}
	mi := &file_kayak_v1_admin_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigItem) ProtoMessage() {}

func (x *ConfigItem) ProtoReflect() protoreflect.Message {
	mi := &file_kayak_v1_admin_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigItem.ProtoReflect.Descriptor instead.
func (*ConfigItem) Descriptor() ([]byte, []int) {
	return file_kayak_v1_admin_proto_rawDescGZIP(), []int{3}
}

func (x *ConfigItem) GetSuffrage() string {
	if x != nil {
		return x.Suffrage
	}
	return ""
}

func (x *ConfigItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ConfigItem) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type StatsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	State         string                 `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	Nodes         []*ConfigItem          `protobuf:"bytes,2,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Term          string                 `protobuf:"bytes,3,opt,name=term,proto3" json:"term,omitempty"`
	FsmPending    string                 `protobuf:"bytes,4,opt,name=fsm_pending,json=fsmPending,proto3" json:"fsm_pending,omitempty"` // map<string, string> stats = 1;
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatsResponse) Reset() {
	*x = StatsResponse{}
	mi := &file_kayak_v1_admin_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatsResponse) ProtoMessage() {}

func (x *StatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kayak_v1_admin_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatsResponse.ProtoReflect.Descriptor instead.
func (*StatsResponse) Descriptor() ([]byte, []int) {
	return file_kayak_v1_admin_proto_rawDescGZIP(), []int{4}
}

func (x *StatsResponse) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *StatsResponse) GetNodes() []*ConfigItem {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *StatsResponse) GetTerm() string {
	if x != nil {
		return x.Term
	}
	return ""
}

func (x *StatsResponse) GetFsmPending() string {
	if x != nil {
		return x.FsmPending
	}
	return ""
}

type LeaderRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeaderRequest) Reset() {
	*x = LeaderRequest{}
	mi := &file_kayak_v1_admin_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaderRequest) ProtoMessage() {}

func (x *LeaderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kayak_v1_admin_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaderRequest.ProtoReflect.Descriptor instead.
func (*LeaderRequest) Descriptor() ([]byte, []int) {
	return file_kayak_v1_admin_proto_rawDescGZIP(), []int{5}
}

type LeaderResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeaderResponse) Reset() {
	*x = LeaderResponse{}
	mi := &file_kayak_v1_admin_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaderResponse) ProtoMessage() {}

func (x *LeaderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kayak_v1_admin_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaderResponse.ProtoReflect.Descriptor instead.
func (*LeaderResponse) Descriptor() ([]byte, []int) {
	return file_kayak_v1_admin_proto_rawDescGZIP(), []int{6}
}

func (x *LeaderResponse) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *LeaderResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_kayak_v1_admin_proto protoreflect.FileDescriptor

const file_kayak_v1_admin_proto_rawDesc = "" +
	"\n" +
	"\x14kayak/v1/admin.proto\x12\bkayak.v1\";\n" +
	"\x0fAddVoterRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x18\n" +
	"\aaddress\x18\x02 \x01(\tR\aaddress\"\x12\n" +
	"\x10AddVoterResponse\"\x0e\n" +
	"\fStatsRequest\"R\n" +
	"\n" +
	"ConfigItem\x12\x1a\n" +
	"\bsuffrage\x18\x01 \x01(\tR\bsuffrage\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x12\x18\n" +
	"\aaddress\x18\x03 \x01(\tR\aaddress\"\x86\x01\n" +
	"\rStatsResponse\x12\x14\n" +
	"\x05state\x18\x01 \x01(\tR\x05state\x12*\n" +
	"\x05nodes\x18\x02 \x03(\v2\x14.kayak.v1.ConfigItemR\x05nodes\x12\x12\n" +
	"\x04term\x18\x03 \x01(\tR\x04term\x12\x1f\n" +
	"\vfsm_pending\x18\x04 \x01(\tR\n" +
	"fsmPending\"\x0f\n" +
	"\rLeaderRequest\":\n" +
	"\x0eLeaderResponse\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id2\xce\x01\n" +
	"\fAdminService\x12C\n" +
	"\bAddVoter\x12\x19.kayak.v1.AddVoterRequest\x1a\x1a.kayak.v1.AddVoterResponse\"\x00\x12:\n" +
	"\x05Stats\x12\x16.kayak.v1.StatsRequest\x1a\x17.kayak.v1.StatsResponse\"\x00\x12=\n" +
	"\x06Leader\x12\x17.kayak.v1.LeaderRequest\x1a\x18.kayak.v1.LeaderResponse\"\x00B\x8d\x01\n" +
	"\fcom.kayak.v1B\n" +
	"AdminProtoP\x01Z0github.com/binarymatt/kayak/gen/kayak/v1;kayakv1\xa2\x02\x03KXX\xaa\x02\bKayak.V1\xca\x02\bKayak\\V1\xe2\x02\x14Kayak\\V1\\GPBMetadata\xea\x02\tKayak::V1b\x06proto3"

var (
	file_kayak_v1_admin_proto_rawDescOnce sync.Once
	file_kayak_v1_admin_proto_rawDescData []byte
)

func file_kayak_v1_admin_proto_rawDescGZIP() []byte {
	file_kayak_v1_admin_proto_rawDescOnce.Do(func() {
		file_kayak_v1_admin_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_kayak_v1_admin_proto_rawDesc), len(file_kayak_v1_admin_proto_rawDesc)))
	})
	return file_kayak_v1_admin_proto_rawDescData
}

var file_kayak_v1_admin_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_kayak_v1_admin_proto_goTypes = []any{
	(*AddVoterRequest)(nil),  // 0: kayak.v1.AddVoterRequest
	(*AddVoterResponse)(nil), // 1: kayak.v1.AddVoterResponse
	(*StatsRequest)(nil),     // 2: kayak.v1.StatsRequest
	(*ConfigItem)(nil),       // 3: kayak.v1.ConfigItem
	(*StatsResponse)(nil),    // 4: kayak.v1.StatsResponse
	(*LeaderRequest)(nil),    // 5: kayak.v1.LeaderRequest
	(*LeaderResponse)(nil),   // 6: kayak.v1.LeaderResponse
}
var file_kayak_v1_admin_proto_depIdxs = []int32{
	3, // 0: kayak.v1.StatsResponse.nodes:type_name -> kayak.v1.ConfigItem
	0, // 1: kayak.v1.AdminService.AddVoter:input_type -> kayak.v1.AddVoterRequest
	2, // 2: kayak.v1.AdminService.Stats:input_type -> kayak.v1.StatsRequest
	5, // 3: kayak.v1.AdminService.Leader:input_type -> kayak.v1.LeaderRequest
	1, // 4: kayak.v1.AdminService.AddVoter:output_type -> kayak.v1.AddVoterResponse
	4, // 5: kayak.v1.AdminService.Stats:output_type -> kayak.v1.StatsResponse
	6, // 6: kayak.v1.AdminService.Leader:output_type -> kayak.v1.LeaderResponse
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_kayak_v1_admin_proto_init() }
func file_kayak_v1_admin_proto_init() {
	if File_kayak_v1_admin_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_kayak_v1_admin_proto_rawDesc), len(file_kayak_v1_admin_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_kayak_v1_admin_proto_goTypes,
		DependencyIndexes: file_kayak_v1_admin_proto_depIdxs,
		MessageInfos:      file_kayak_v1_admin_proto_msgTypes,
	}.Build()
	File_kayak_v1_admin_proto = out.File
	file_kayak_v1_admin_proto_goTypes = nil
	file_kayak_v1_admin_proto_depIdxs = nil
}

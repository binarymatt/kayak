openapi: 3.1.0
info:
  title: transport.v1
paths:
  /transport.v1.RaftTransport/AppendEntriesPipeline: {}
  /transport.v1.RaftTransport/AppendEntries:
    post:
      tags:
        - transport.v1.RaftTransport
      summary: AppendEntries
      description: AppendEntries performs a single append entries request / response.
      operationId: transport.v1.RaftTransport.AppendEntries
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/transport.v1.AppendEntriesRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transport.v1.AppendEntriesResponse'
  /transport.v1.RaftTransport/RequestVote:
    post:
      tags:
        - transport.v1.RaftTransport
      summary: RequestVote
      description: RequestVote is the command used by a candidate to ask a Raft peer for a vote in an election.
      operationId: transport.v1.RaftTransport.RequestVote
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/transport.v1.RequestVoteRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transport.v1.RequestVoteResponse'
  /transport.v1.RaftTransport/TimeoutNow:
    post:
      tags:
        - transport.v1.RaftTransport
      summary: TimeoutNow
      description: TimeoutNow is used to start a leadership transfer to the target node.
      operationId: transport.v1.RaftTransport.TimeoutNow
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/transport.v1.TimeoutNowRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transport.v1.TimeoutNowResponse'
  /transport.v1.RaftTransport/InstallSnapshot: {}
  /transport.v1.RaftTransport/RequestPreVote:
    post:
      tags:
        - transport.v1.RaftTransport
      summary: RequestPreVote
      description: RequestPreVote is the command used by a candidate to ask a Raft peer for a vote in an election.
      operationId: transport.v1.RaftTransport.RequestPreVote
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/transport.v1.RequestPreVoteRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transport.v1.RequestPreVoteResponse'
components:
  schemas:
    transport.v1.Log.LogType:
      type: string
      title: LogType
      enum:
        - LOG_COMMAND
        - LOG_NOOP
        - LOG_ADD_PEER_DEPRECATED
        - LOG_REMOVE_PEER_DEPRECATED
        - LOG_BARRIER
        - LOG_CONFIGURATION
    google.protobuf.Timestamp:
      type: string
      format: date-time
      description: |-
        A Timestamp represents a point in time independent of any time zone or local
         calendar, encoded as a count of seconds and fractions of seconds at
         nanosecond resolution. The count is relative to an epoch at UTC midnight on
         January 1, 1970, in the proleptic Gregorian calendar which extends the
         Gregorian calendar backwards to year one.

         All minutes are 60 seconds long. Leap seconds are "smeared" so that no leap
         second table is needed for interpretation, using a [24-hour linear
         smear](https://developers.google.com/time/smear).

         The range is from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59.999999999Z. By
         restricting to that range, we ensure that we can convert to and from [RFC
         3339](https://www.ietf.org/rfc/rfc3339.txt) date strings.

         # Examples

         Example 1: Compute Timestamp from POSIX `time()`.

             Timestamp timestamp;
             timestamp.set_seconds(time(NULL));
             timestamp.set_nanos(0);

         Example 2: Compute Timestamp from POSIX `gettimeofday()`.

             struct timeval tv;
             gettimeofday(&tv, NULL);

             Timestamp timestamp;
             timestamp.set_seconds(tv.tv_sec);
             timestamp.set_nanos(tv.tv_usec * 1000);

         Example 3: Compute Timestamp from Win32 `GetSystemTimeAsFileTime()`.

             FILETIME ft;
             GetSystemTimeAsFileTime(&ft);
             UINT64 ticks = (((UINT64)ft.dwHighDateTime) << 32) | ft.dwLowDateTime;

             // A Windows tick is 100 nanoseconds. Windows epoch 1601-01-01T00:00:00Z
             // is 11644473600 seconds before Unix epoch 1970-01-01T00:00:00Z.
             Timestamp timestamp;
             timestamp.set_seconds((INT64) ((ticks / 10000000) - 11644473600LL));
             timestamp.set_nanos((INT32) ((ticks % 10000000) * 100));

         Example 4: Compute Timestamp from Java `System.currentTimeMillis()`.

             long millis = System.currentTimeMillis();

             Timestamp timestamp = Timestamp.newBuilder().setSeconds(millis / 1000)
                 .setNanos((int) ((millis % 1000) * 1000000)).build();

         Example 5: Compute Timestamp from Java `Instant.now()`.

             Instant now = Instant.now();

             Timestamp timestamp =
                 Timestamp.newBuilder().setSeconds(now.getEpochSecond())
                     .setNanos(now.getNano()).build();

         Example 6: Compute Timestamp from current time in Python.

             timestamp = Timestamp()
             timestamp.GetCurrentTime()

         # JSON Mapping

         In JSON format, the Timestamp type is encoded as a string in the
         [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format. That is, the
         format is "{year}-{month}-{day}T{hour}:{min}:{sec}[.{frac_sec}]Z"
         where {year} is always expressed using four digits while {month}, {day},
         {hour}, {min}, and {sec} are zero-padded to two digits each. The fractional
         seconds, which can go up to 9 digits (i.e. up to 1 nanosecond resolution),
         are optional. The "Z" suffix indicates the timezone ("UTC"); the timezone
         is required. A proto3 JSON serializer should always use UTC (as indicated by
         "Z") when printing the Timestamp type and a proto3 JSON parser should be
         able to accept both UTC and other timezones (as indicated by an offset).

         For example, "2017-01-15T01:30:15.01Z" encodes 15.01 seconds past
         01:30 UTC on January 15, 2017.

         In JavaScript, one can convert a Date object to this format using the
         standard
         [toISOString()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString)
         method. In Python, a standard `datetime.datetime` object can be converted
         to this format using
         [`strftime`](https://docs.python.org/2/library/time.html#time.strftime) with
         the time format spec '%Y-%m-%dT%H:%M:%S.%fZ'. Likewise, in Java, one can use
         the Joda Time's [`ISODateTimeFormat.dateTime()`](
         http://joda-time.sourceforge.net/apidocs/org/joda/time/format/ISODateTimeFormat.html#dateTime()
         ) to obtain a formatter capable of generating timestamps in this format.
    transport.v1.AppendEntriesRequest:
      type: object
      properties:
        rpcHeader:
          title: rpc_header
          $ref: '#/components/schemas/transport.v1.RPCHeader'
        term:
          type:
            - integer
            - string
          title: term
          format: int64
        leader:
          type: string
          title: leader
          format: byte
        prevLogEntry:
          type:
            - integer
            - string
          title: prev_log_entry
          format: int64
        prevLogTerm:
          type:
            - integer
            - string
          title: prev_log_term
          format: int64
        entries:
          type: array
          items:
            $ref: '#/components/schemas/transport.v1.Log'
          title: entries
        leaderCommitIndex:
          type:
            - integer
            - string
          title: leader_commit_index
          format: int64
      title: AppendEntriesRequest
      additionalProperties: false
    transport.v1.AppendEntriesResponse:
      type: object
      properties:
        rpcHeader:
          title: rpc_header
          $ref: '#/components/schemas/transport.v1.RPCHeader'
        term:
          type:
            - integer
            - string
          title: term
          format: int64
        lastLog:
          type:
            - integer
            - string
          title: last_log
          format: int64
        success:
          type: boolean
          title: success
        noRetryBackoff:
          type: boolean
          title: no_retry_backoff
      title: AppendEntriesResponse
      additionalProperties: false
    transport.v1.InstallSnapshotRequest:
      type: object
      properties:
        rpcHeader:
          title: rpc_header
          $ref: '#/components/schemas/transport.v1.RPCHeader'
        snapshotVersion:
          type:
            - integer
            - string
          title: snapshot_version
          format: int64
        term:
          type:
            - integer
            - string
          title: term
          format: int64
        leader:
          type: string
          title: leader
          format: byte
        lastLogIndex:
          type:
            - integer
            - string
          title: last_log_index
          format: int64
        lastLogTerm:
          type:
            - integer
            - string
          title: last_log_term
          format: int64
        peers:
          type: string
          title: peers
          format: byte
        configuration:
          type: string
          title: configuration
          format: byte
        configurationIndex:
          type:
            - integer
            - string
          title: configuration_index
          format: int64
        size:
          type:
            - integer
            - string
          title: size
          format: int64
        data:
          type: string
          title: data
          format: byte
      title: InstallSnapshotRequest
      additionalProperties: false
      description: |-
        The first InstallSnapshotRequest on the stream contains all the metadata.
         All further messages contain only data.
    transport.v1.InstallSnapshotResponse:
      type: object
      properties:
        rpcHeader:
          title: rpc_header
          $ref: '#/components/schemas/transport.v1.RPCHeader'
        term:
          type:
            - integer
            - string
          title: term
          format: int64
        success:
          type: boolean
          title: success
      title: InstallSnapshotResponse
      additionalProperties: false
    transport.v1.Log:
      type: object
      properties:
        index:
          type:
            - integer
            - string
          title: index
          format: int64
        term:
          type:
            - integer
            - string
          title: term
          format: int64
        type:
          title: type
          $ref: '#/components/schemas/transport.v1.Log.LogType'
        data:
          type: string
          title: data
          format: byte
        extensions:
          type: string
          title: extensions
          format: byte
        appendedAt:
          title: appended_at
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: Log
      additionalProperties: false
    transport.v1.RPCHeader:
      type: object
      properties:
        protocolVersion:
          type:
            - integer
            - string
          title: protocol_version
          format: int64
        id:
          type: string
          title: id
          format: byte
        addr:
          type: string
          title: addr
          format: byte
      title: RPCHeader
      additionalProperties: false
    transport.v1.RequestPreVoteRequest:
      type: object
      properties:
        rpcHeader:
          title: rpc_header
          $ref: '#/components/schemas/transport.v1.RPCHeader'
        term:
          type:
            - integer
            - string
          title: term
          format: int64
        lastLogIndex:
          type:
            - integer
            - string
          title: last_log_index
          format: int64
        lastLogTerm:
          type:
            - integer
            - string
          title: last_log_term
          format: int64
      title: RequestPreVoteRequest
      additionalProperties: false
    transport.v1.RequestPreVoteResponse:
      type: object
      properties:
        rpcHeader:
          title: rpc_header
          $ref: '#/components/schemas/transport.v1.RPCHeader'
        term:
          type:
            - integer
            - string
          title: term
          format: int64
        granted:
          type: boolean
          title: granted
      title: RequestPreVoteResponse
      additionalProperties: false
    transport.v1.RequestVoteRequest:
      type: object
      properties:
        rpcHeader:
          title: rpc_header
          $ref: '#/components/schemas/transport.v1.RPCHeader'
        term:
          type:
            - integer
            - string
          title: term
          format: int64
        candidate:
          type: string
          title: candidate
          format: byte
        lastLogIndex:
          type:
            - integer
            - string
          title: last_log_index
          format: int64
        lastLogTerm:
          type:
            - integer
            - string
          title: last_log_term
          format: int64
        leadershipTransfer:
          type: boolean
          title: leadership_transfer
      title: RequestVoteRequest
      additionalProperties: false
    transport.v1.RequestVoteResponse:
      type: object
      properties:
        rpcHeader:
          title: rpc_header
          $ref: '#/components/schemas/transport.v1.RPCHeader'
        term:
          type:
            - integer
            - string
          title: term
          format: int64
        peers:
          type: string
          title: peers
          format: byte
        granted:
          type: boolean
          title: granted
      title: RequestVoteResponse
      additionalProperties: false
    transport.v1.TimeoutNowRequest:
      type: object
      properties:
        rpcHeader:
          title: rpc_header
          $ref: '#/components/schemas/transport.v1.RPCHeader'
      title: TimeoutNowRequest
      additionalProperties: false
    transport.v1.TimeoutNowResponse:
      type: object
      properties:
        rpcHeader:
          title: rpc_header
          $ref: '#/components/schemas/transport.v1.RPCHeader'
      title: TimeoutNowResponse
      additionalProperties: false
    connect-protocol-version:
      type: number
      title: Connect-Protocol-Version
      enum:
        - 1
      description: Define the version of the Connect protocol
      const: 1
    connect-timeout-header:
      type: number
      title: Connect-Timeout-Ms
      description: Define the timeout, in ms
    connect.error:
      type: object
      properties:
        code:
          type: string
          examples:
            - not_found
          enum:
            - canceled
            - unknown
            - invalid_argument
            - deadline_exceeded
            - not_found
            - already_exists
            - permission_denied
            - resource_exhausted
            - failed_precondition
            - aborted
            - out_of_range
            - unimplemented
            - internal
            - unavailable
            - data_loss
            - unauthenticated
          description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
        message:
          type: string
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
        detail:
          $ref: '#/components/schemas/google.protobuf.Any'
      title: Connect Error
      additionalProperties: true
      description: 'Error type returned by Connect: https://connectrpc.com/docs/go/errors/#http-representation'
    google.protobuf.Any:
      type: object
      properties:
        type:
          type: string
        value:
          type: string
          format: binary
        debug:
          type: object
          additionalProperties: true
      additionalProperties: true
      description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
security: []
tags:
  - name: transport.v1.RaftTransport
